{"version":3,"file":"cardactions.min.js","sources":["../src/cardactions.js"],"sourcesContent":["/**\n * Module to manage actions on a card in learn mode in mod_wordcards.\n *\n * @package mod_wordcards\n * @author Justin Hunt - justin@poodll.com\n */\ndefine(['jquery', 'core/ajax', 'core/str', 'core/log', 'mod_wordcards/youglish'], function($, ajax, str,log, youglish) {\n    const SELECTOR = {\n        CARDCONTAINER: '.flip-card',\n        CARD: '.definition_flashcards .wc-faces.flip-card-inner',\n        FRONTFACE: '[data-face=\"term\"]',\n        BACKFACE: '[data-face=\"details\"]',\n        YOUGLISH_HOLDER: '.term-video',\n        YOUGLISH_WIDGET: '#mod_wordcardsyouglish-widget',\n        YOUGLISH_PLACEHOLDER: '.youglish-placeholder',\n        TESTING: '.testing-event-click'\n    }\n\n\n    const EVENT = {\n        CLICK: 'click',\n        HOVERIN: 'mouseover',\n        HOVEROUT: 'mouseout'\n    }\n\n\n    var stringStore = {};\n\n    const initStrings = function (callback) {\n        str.get_strings([\n            {key: \"addtomywords\", component: \"mod_wordcards\"},\n            {key: \"removefrommywords\", component: \"mod_wordcards\"},\n        ]).done(function (strings) {\n            stringStore = strings;\n            if (typeof callback == 'function') {\n                callback();\n            }\n        });\n    };\n\n    const initYouGlish = function(youglishprops) {\n        $.getScript('https://youglish.com/public/emb/widget.js', function(){\n            YG.setParnterKey(youglishprops.token);\n        });\n    };\n\n    const clearYouGlish = function(e) {\n        if(e!==undefined) {\n            const localCurrTar = $(e.currentTarget);\n            var termid = localCurrTar.data('termid');\n            var termvideo = $('div.term-video-' + termid);\n            var termimage = $('div.term-image-' + termid);\n\n            termvideo.hide();\n            termimage.show();\n            localCurrTar.removeClass(\"isselected video-selected\");\n        }else{\n            var termvideo = $('div.term-video');\n            var termimage = $('div.term-image');\n            termvideo.hide();\n            termimage.show();\n            $(\".btn.retrieve-video\").removeClass(\"isselected video-selected\");\n        }\n        youglish.clear();\n    };\n\n    const restoreCards = function() {\n        const allcards = $(SELECTOR.CARD);\n        allcards.removeClass(\"show-back-side\");\n    };\n\n\n    const loadYouGlish = function(currentface) {\n        log.debug('loadYouGlish');\n        var youglishholder = currentface.find(SELECTOR.YOUGLISH_HOLDER);\n        var youglishplaceholder = currentface.find(SELECTOR.YOUGLISH_PLACEHOLDER);\n        youglish.load(youglishplaceholder.data('lang'),\n            youglishplaceholder.data('term'),\n            youglishplaceholder.data('accent'),\n            youglishholder);\n    };\n\n\n    const initButtonListeners = function() {\n        var that = this;\n\n        var showVideoPlayer = function(e) {\n            const localCurrTar = $(e.currentTarget);\n            var termid = localCurrTar.data('termid');\n            var termvideo = $('div.term-video-' + termid);\n            var termimage = $('div.term-image-' + termid);\n\n            termvideo.show();\n            termimage.hide();\n            if(termimage.length>0){\n                localCurrTar.addClass(\"isselected video-selected\");\n            }else{\n                localCurrTar.addClass(\"isselected\");\n            }\n            loadYouGlish(localCurrTar.closest(SELECTOR.BACKFACE));\n        }\n\n        var hideVideoPlayer = function(e) {\n            clearYouGlish(e)\n        }\n        \n        $(SELECTOR.CARDCONTAINER).on(EVENT.CLICK, function(e) {\n            const currTar = $(e.currentTarget);\n            const actualTar = currTar.children();\n            if (actualTar.hasClass(\"show-back-side\")) {\n                actualTar.removeClass(\"show-back-side\");\n            } else {\n                actualTar.addClass(\"show-back-side\")\n            }\n        });\n\n       /*\n        $(\"#card-audio\").on(EVENT.CLICK, function(e) {\n            \n            //$(SELECTOR.CARDCONTAINER).css(\"pointer-events\",\"none\");\n\n            console.log(\"Audio sounds\");\n            e.stopPropagation();\n        });\n        */\n\n/*\n        $(SELECTOR.CARD).on(EVENT.CLICK, function(e) {\n            const currTar = $(e.currentTarget);\n            const cardContainer = currTar.find(SELECTOR.CARD);\n            currTar.css(\"transform\", \"rotateY(180deg)\");\n            console.log(cardContainer);\n            const faceback = currTar.find(SELECTOR.BACKFACE);\n            const facefront = currTar.find(SELECTOR.FRONTFACE);\n            \n\n            if(faceback.is(\":visible\")){\n                faceback.hide();\n                facefront.show();\n                console.log(\"hello from Wordcards\");\n                clearYouGlish(faceback);\n            }else if(facefront.is(\":visible\")){\n                facefront.hide();\n                faceback.show();\n                console.log(\"hi from Wordcards\");\n            }\n        });\n*/\n\n\n        if($(\".retrieve-video\")){\n            $(\".retrieve-video\").on(EVENT.CLICK, function(e) {\n                e.stopPropagation();\n                if($(e.currentTarget).hasClass('isselected')){\n                    hideVideoPlayer(e);\n                }else{\n                    showVideoPlayer(e);\n                }\n            })\n        }\n\n\n     \n    };\n\n    return {\n        init: function (youglish) {\n            $(document).ready(function() {\n                initStrings();\n                initButtonListeners();\n                if(youglish) {\n                    initYouGlish(youglish);\n                }\n            })\n        },\n        clearYouGlish: clearYouGlish,\n        restoreCards: restoreCards\n    }\n});"],"names":["define","$","ajax","str","log","youglish","SELECTOR","EVENT","clearYouGlish","e","undefined","localCurrTar","currentTarget","termid","data","termvideo","termimage","hide","show","removeClass","clear","initButtonListeners","showVideoPlayer","length","addClass","currentface","debug","youglishholder","find","youglishplaceholder","load","loadYouGlish","closest","on","actualTar","children","hasClass","stopPropagation","hideVideoPlayer","init","document","ready","callback","youglishprops","get_strings","key","component","done","strings","getScript","YG","setParnterKey","token","restoreCards"],"mappings":"AAMAA,mCAAO,CAAC,SAAU,YAAa,WAAY,WAAY,2BAA2B,SAASC,EAAGC,KAAMC,IAAIC,IAAKC,gBACnGC,uBACa,aADbA,cAEI,mDAFJA,kBAIQ,wBAJRA,yBAKe,cALfA,8BAOoB,wBAKpBC,YACK,cA0BLC,cAAgB,SAASC,WACpBC,IAAJD,EAAe,OACRE,aAAeV,EAAEQ,EAAEG,mBACrBC,OAASF,aAAaG,KAAK,UAC3BC,UAAYd,EAAE,kBAAoBY,QAClCG,UAAYf,EAAE,kBAAoBY,QAEtCE,UAAUE,OACVD,UAAUE,OACVP,aAAaQ,YAAY,iCACxB,CACGJ,UAAYd,EAAE,kBACde,UAAYf,EAAE,kBAClBc,UAAUE,OACVD,UAAUE,OACVjB,EAAE,uBAAuBkB,YAAY,6BAEzCd,SAASe,SAoBPC,oBAAsB,eAGpBC,gBAAkB,SAASb,SACrBE,aAAeV,EAAEQ,EAAEG,mBACrBC,OAASF,aAAaG,KAAK,UAC3BC,UAAYd,EAAE,kBAAoBY,QAClCG,UAAYf,EAAE,kBAAoBY,QAEtCE,UAAUG,OACVF,UAAUC,OACPD,UAAUO,OAAO,EAChBZ,aAAaa,SAAS,6BAEtBb,aAAaa,SAAS,cAzBb,SAASC,aAC1BrB,IAAIsB,MAAM,oBACNC,eAAiBF,YAAYG,KAAKtB,0BAClCuB,oBAAsBJ,YAAYG,KAAKtB,+BAC3CD,SAASyB,KAAKD,oBAAoBf,KAAK,QACnCe,oBAAoBf,KAAK,QACzBe,oBAAoBf,KAAK,UACzBa,gBAoBAI,CAAapB,aAAaqB,QAAQ1B,qBAOtCL,EAAEK,wBAAwB2B,GAAG1B,aAAa,SAASE,SAEzCyB,UADUjC,EAAEQ,EAAEG,eACMuB,WACtBD,UAAUE,SAAS,kBACnBF,UAAUf,YAAY,kBAEtBe,UAAUV,SAAS,qBAsCxBvB,EAAE,oBACDA,EAAE,mBAAmBgC,GAAG1B,aAAa,SAASE,GAC1CA,EAAE4B,kBACCpC,EAAEQ,EAAEG,eAAewB,SAAS,cAnDjB,SAAS3B,GAC3BD,cAAcC,GAmDN6B,CAAgB7B,GAEhBa,gBAAgBb,aASzB,CACH8B,KAAM,SAAUlC,UACZJ,EAAEuC,UAAUC,OAAM,WA3IN,IAAUC,SAYAC,cAX1BxC,IAAIyC,YAAY,CACZ,CAACC,IAAK,eAAgBC,UAAW,iBACjC,CAACD,IAAK,oBAAqBC,UAAW,mBACvCC,MAAK,SAAUC,SACAA,QACS,mBAAZN,UACPA,cAsIArB,sBACGhB,WAlIesC,cAmIDtC,SAlIzBJ,EAAEgD,UAAU,6CAA6C,WACrDC,GAAGC,cAAcR,cAAcS,eAqInC5C,cAAeA,cACf6C,aA9GiB,WACApD,EAAEK,eACVa,YAAY"}