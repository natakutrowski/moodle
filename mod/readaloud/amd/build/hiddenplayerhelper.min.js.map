{"version":3,"file":"hiddenplayerhelper.min.js","sources":["../src/hiddenplayerhelper.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_readaloud/definitions'], function ($, log, def) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Readaloud hidden player helper: initialising');\n\n    return {\n\n        controls: {},\n        hiddenplayer: def.hiddenplayer,\n        hiddenplayerbutton: def.hiddenplayerbutton,\n        hiddenplayerbuttonactive: def.hiddenplayerbuttonactive,\n        hiddenplayerbuttonpaused: def.hiddenplayerbuttonpaused,\n        hiddenplayerbuttonplaying: def.hiddenplayerbuttonpaused,\n\n        init: function (opts) {\n            this.register_controls();\n            this.register_events();\n        },\n\n        register_controls: function () {\n            this.controls.hiddenplayer = $('.' + this.hiddenplayer);\n            //we stopped using this because of a race condition where buttons arrived on page after this was called\n            //this.controls.hiddenplayerbutton = $('.' + this.hiddenplayerbutton);\n        },\n\n        register_events: function () {\n            var that = this;\n            var audioplayer = this.controls.hiddenplayer;\n\n            // Use event delegation to handle the button click\n            $(document).on('click', '.' + this.hiddenplayerbutton, function (e) {\n                var audiosrc = $(this).attr('data-audiosource');\n                if (audiosrc === audioplayer.attr('src') && !(audioplayer.prop('paused'))) {\n                    that.dohiddenstop();\n                } else {\n                    that.dohiddenplay(audiosrc);\n                }\n            });\n        },\n\n        dohiddenplay: function (audiosrc) {\n            var m = this;\n            var audioplayer = m.controls.hiddenplayer;\n            audioplayer.attr('src', audiosrc);\n            audioplayer[0].pause();\n            audioplayer[0].load();\n            var pp = audioplayer[0].play();\n            if (pp !== undefined) {\n                pp.then(function () {\n                    // Yay we are playing\n                }).catch(function (error) {\n                    // somethings up ... but we can ignore it\n                });\n            }\n            m.dobuttonicons();\n        },\n        dohiddenstop: function () {\n            var m = this;\n            var audioplayer = m.controls.hiddenplayer;\n            audioplayer[0].pause();\n            m.dobuttonicons();\n        },\n\n        dobuttonicons: function (theaudiosrc) {\n            var m = this;\n            var audioplayer = m.controls.hiddenplayer;\n            var thebuttons = $('.' + this.hiddenplayerbutton);\n            if (!theaudiosrc) {\n                theaudiosrc = audioplayer.attr('src');\n            }\n            thebuttons.each(function (index) {\n                var audiosrc = $(this).attr('data-audiosource');\n                if (audiosrc === theaudiosrc) {\n                    $(this).addClass(m.hiddenplayerbuttonactive);\n                    if ($(audioplayer).prop('paused')) {\n                        $(this).removeClass(m.hiddenplayerbuttonplaying);\n                        $(this).addClass(m.hiddenplayerbuttonpaused);\n                        //for now we make it look like no button is selected\n                        //later we can implement better controls\n                        $(this).removeClass(m.hiddenplayerbuttonactive);\n                    } else {\n                        $(this).removeClass(m.hiddenplayerbuttonpaused);\n                        $(this).addClass(m.hiddenplayerbuttonplaying);\n                    }\n                } else {\n                    $(this).removeClass(m.hiddenplayerbuttonactive);\n                    $(this).removeClass(m.hiddenplayerbuttonplaying);\n                    $(this).removeClass(m.hiddenplayerbuttonpaused);\n                }\n            });\n        }\n    };//end of return object\n\n});"],"names":["define","$","log","def","debug","controls","hiddenplayer","hiddenplayerbutton","hiddenplayerbuttonactive","hiddenplayerbuttonpaused","hiddenplayerbuttonplaying","init","opts","register_controls","register_events","this","that","audioplayer","document","on","e","audiosrc","attr","prop","dohiddenplay","dohiddenstop","pause","load","pp","play","undefined","then","catch","error","dobuttonicons","theaudiosrc","m","thebuttons","each","index","addClass","removeClass"],"mappings":"AAAAA,0CAAO,CAAC,SAAU,WAAY,8BAA8B,SAAUC,EAAGC,IAAKC,YAG1ED,IAAIE,MAAM,gDAEH,CAEHC,SAAU,GACVC,aAAcH,IAAIG,aAClBC,mBAAoBJ,IAAII,mBACxBC,yBAA0BL,IAAIK,yBAC9BC,yBAA0BN,IAAIM,yBAC9BC,0BAA2BP,IAAIM,yBAE/BE,KAAM,SAAUC,WACPC,yBACAC,mBAGTD,kBAAmB,gBACVR,SAASC,aAAeL,EAAE,IAAMc,KAAKT,eAK9CQ,gBAAiB,eACTE,KAAOD,KACPE,YAAcF,KAAKV,SAASC,aAGhCL,EAAEiB,UAAUC,GAAG,QAAS,IAAMJ,KAAKR,oBAAoB,SAAUa,OACzDC,SAAWpB,EAAEc,MAAMO,KAAK,oBACxBD,WAAaJ,YAAYK,KAAK,QAAYL,YAAYM,KAAK,UAG3DP,KAAKQ,aAAaH,UAFlBL,KAAKS,mBAOjBD,aAAc,SAAUH,cAEhBJ,YADIF,KACYV,SAASC,aAC7BW,YAAYK,KAAK,MAAOD,UACxBJ,YAAY,GAAGS,QACfT,YAAY,GAAGU,WACXC,GAAKX,YAAY,GAAGY,YACbC,IAAPF,IACAA,GAAGG,MAAK,eAELC,OAAM,SAAUC,WATflB,KAaNmB,iBAENT,aAAc,WACFV,KACYV,SAASC,aACjB,GAAGoB,QAFPX,KAGNmB,iBAGNA,cAAe,SAAUC,iBACjBC,EAAIrB,KACJE,YAAcmB,EAAE/B,SAASC,aACzB+B,WAAapC,EAAE,IAAMc,KAAKR,oBACzB4B,cACDA,YAAclB,YAAYK,KAAK,QAEnCe,WAAWC,MAAK,SAAUC,OACPtC,EAAEc,MAAMO,KAAK,sBACXa,aACblC,EAAEc,MAAMyB,SAASJ,EAAE5B,0BACfP,EAAEgB,aAAaM,KAAK,WACpBtB,EAAEc,MAAM0B,YAAYL,EAAE1B,2BACtBT,EAAEc,MAAMyB,SAASJ,EAAE3B,0BAGnBR,EAAEc,MAAM0B,YAAYL,EAAE5B,4BAEtBP,EAAEc,MAAM0B,YAAYL,EAAE3B,0BACtBR,EAAEc,MAAMyB,SAASJ,EAAE1B,8BAGvBT,EAAEc,MAAM0B,YAAYL,EAAE5B,0BACtBP,EAAEc,MAAM0B,YAAYL,EAAE1B,2BACtBT,EAAEc,MAAM0B,YAAYL,EAAE3B"}