{"version":3,"file":"listenandrepeat.min.js","sources":["../src/listenandrepeat.js"],"sourcesContent":["define(['jquery', 'core/log', 'core/ajax', 'mod_readaloud/definitions', 'mod_readaloud/cloudpoodllloader', 'mod_readaloud/ttrecorder'],\n    function($, log, ajax, def, cloudpoodll, ttrecorder) {\n  \"use strict\"; // jshint ;_;\n\n  log.debug('Readaloud listen and repeat: initialising');\n\n  return {\n\n    activated: false,\n    currentSentence: \"\",\n    currentPhonetic: \"\",\n    language: \"en-US\",\n    currentAudioStart: 0,\n    currentAudioStop: 0,\n    oldBreak: {},\n    newBreak: {},\n    mak: null,\n    controls: {},\n    results: [],\n    phonetics: [],\n    cmid: 0,\n    ttr: {},\n\n    init: function(props) {\n\n      var self = this;\n      self.cmid = props.cmid;\n      self.mak = props.modelaudiokaraoke;\n      self.language = props.language;\n      self.region = props.region;\n      self.phonetics = props.phonetics;\n      self.stt_guided = props.stt_guided;\n      self.shadow = false;//props.shadow;\n      self.ttr={};\n\n      //recorder stuff\n      var theCallback =function(message) {\n          switch (message.type) {\n            case 'recordingstarted':\n              if (self.controls.shadowplaycheckbox.is(\":checked\")) {\n                self.shadow = true;\n                log.debug('shadow is true');\n                self.controls.playbutton.trigger('click');\n              }else{\n                log.debug('shadow is false');\n                self.shadow=false;\n              }\n              //hide the self model player (though it may not be here) because we do not want it playing old stuff into mic\n              self.controls.playselfbutton.hide();\n\n              break;\n\n            case 'recordingstopped':\n                  if (self.shadow === true){\n                    self.controls.hiddenplayer[0].pause();\n                  }\n                  if(self.stt_guided || self.ttr.usebrowserrec===false){\n                    self.controls.playselfbutton.show();\n                  }\n                  break;\n\n              case 'speech':\n\n                  self.getComparison(\n                      self.cmid,\n                      self.currentSentence,\n                      message.capturedspeech,\n                      self.currentPhonetic,\n                      function(comparison) {\n                          self.gotComparison(comparison, message);\n                      }\n                  );\n                  break;\n          }\n      };\n\n        //init tt recorder\n      var opts = {};\n      opts.uniqueid = 'readaloud_ttrecorder';\n      opts.stt_guided = self.stt_guided;\n      opts.callback = theCallback;\n      opts.shadow = false;\n      self.ttr = ttrecorder.clone();\n      self.ttr.init(opts);\n\n\n      self.prepare_controls();\n      self.register_events();\n      self.register_mak();\n    },\n\n    activate: function() {\n      this.results = [];\n      this.activated = true;\n    },\n    deactivate: function() {\n      if (this.mak.controls.audioplayer[0].playing) {\n        this.mak.controls.audioplayer[0].pause();\n      }\n      this.activated = false;\n    },\n\n    prepare_controls: function() {\n      var self = this;\n      self.controls.container = $('#' + def.landrcontainer);\n      self.controls.hiddenplayer = $('#mod_readaloud_landr_hiddenplayer');\n      self.controls.hiddenselfplayer = $('#mod_readaloud_landr_hiddenselfplayer');\n      self.controls.playbutton = $('#mod_readaloud_landr_modalplay');\n      self.controls.shadowplaycheckbox = $('#mod_readaloud_landr_shadow');\n      self.controls.skipbutton = $('#mod_readaloud_landr_modalskip');\n      self.controls.finishedbutton = $(\"#mod_readaloud_landr_modalfinished\");\n      self.controls.playselfbutton = $(\"#mod_readaloud_landr_modalplayself\");\n      self.audiourl = self.mak.fetch_audio_url();\n      self.controls.hiddenplayer.attr('src', self.audiourl);\n\n    },\n\n    register_mak: function() {\n      var self = this;\n\n      self.mak.on_reach_audio_break = function(sentence, oldbreak, newbreak, breaks) {\n       // log.debug(breaks);\n        //do not get involved if we are not active\n        //model audio karaoke is used elsewhere (shadow and preview) as well\n        if (!self.activated) {\n          return;\n        }\n\n        // sentence contains the target text\n        //empty strings are none of our concern\n        if (sentence.trim() === '') {\n          return;\n        }\n\n        self.currentSentence = sentence;\n        self.oldBreak = oldbreak;\n        self.newBreak = newbreak;\n        self.currentAudioStart = oldbreak.audiotime;\n        self.currentAudioEnd = newbreak.audiotime;\n        //in some cases ttrecorder wants to know the currentsentence\n        if(!self.ttr.usebrowserrec) {\n          self.ttr.currentPrompt=self.currentSentence;\n        }\n\n        if(self.currentAudioStart===self.currentAudioEnd){\n            //This is a special case where the end of the audio has been reached in MAK, and there is now no next break\n            self.currentAudioEnd=self.controls.hiddenplayer[0].duration;\n        }\n\n          if(self.phonetics.length>newbreak.wordnumber-1){\n              var startpos = oldbreak.wordnumber;\n              if(startpos<0){startpos=0;}\n              var endpos = newbreak.wordnumber;\n\n              /*\n              * break=0: wordnumber 0 start = 0, end = 9: jssplit returns 0-8\n              * break=1: wordnumber 9 start = 9, end = 18: jssplit returns 9-17\n              * break=2: wordnumber 18 start = 18, end = 99: jssplit returns 18-98\n               */\n              self.currentPhonetic = self.phonetics.slice(startpos,endpos).join(' ');\n          }else{\n              self.currentPhonetic  = '';\n          }\n\n        //pause audio while we do our thing\n        if (oldbreak.breaknumber == 0 && newbreak == false) {\n          // do nothing\n        } else {\n          // detect last line\n          if (oldbreak.breaknumber == breaks[breaks.length - 1].breaknumber) {\n            self.controls.finishedbutton.show();\n            self.controls.skipbutton.hide();\n            self.oldBreak.isfinalbreak=true;\n          } else {\n            self.controls.finishedbutton.hide();\n            self.controls.skipbutton.show();\n          }\n          self.mak.pause_audio();\n          self.controls.container.modal('show');\n          $(\"#mod_readaloud_modal_target_phrase\").html(sentence.split(/ /).map(function(e, i) {\n            return '<div class=\"mod_readaloud_modal_target_word\" data-index=\"' + i + '\">' + e + '</div>';\n          }));\n        }\n\n      };\n\n    },\n\n    register_events: function() {\n\n      var self = this;\n\n      self.controls.playbutton.on('click', function(e) {\n        if (!self.controls.hiddenplayer[0].paused) {\n          self.controls.hiddenplayer[0].pause();\n        }else {\n          self.controls.hiddenplayer[0].currentTime = self.currentAudioStart;\n          self.controls.hiddenplayer[0].play();\n        }\n      });\n\n      self.controls.playselfbutton.on('click',function(e){\n        if (!self.controls.hiddenselfplayer[0].paused) {\n          self.controls.hiddenselfplayer[0].pause();\n        }else {\n          self.controls.hiddenselfplayer.attr('src', self.ttr.audio.dataURI);\n          self.controls.hiddenselfplayer[0].play();\n        }\n      });\n\n      self.controls.shadowplaycheckbox.on('change', function(e) {\n        var isChecked = $(this).is(':checked');\n        self.ttr.shadow=isChecked;\n      });\n\n      self.controls.skipbutton.on('click', function(e) {\n        self.controls.container.modal('hide');\n\n        //hide the self model player because when we show page again we dont want it enabled\n        self.controls.playselfbutton.hide();\n\n        //we might get here from a 100% score on final break on the modal (it calls the skip button\n        //so we check if its finished or not. Otherwise it will return to the first break and start playing\n        if(self.oldBreak.isfinalbreak) {\n          self.mak.controls.audioplayer[0].currentTime = 0;\n        }else{\n          if (self.controls.hiddenplayer[0].playing) {\n            self.controls.hiddenplayer[0].pause();\n          }\n          self.controls.hiddenplayer[0].currentTime = self.currentAudioStart;\n          //if the main page player has gone a bit forward, we can lose the first part of our next break, so we adjust that if we have to\n          //we dont want it hitting the same break repeatedly though, so we inc by .1 to get clear of that\n          log.debug('mak audio time', self.mak.get_audio_time());\n          log.debug('self current audio end', self.currentAudioEnd);\n          if(self.mak.get_audio_time() > self.currentAudioEnd+.1){\n            self.mak.set_audio_time(self.currentAudioEnd+.1);\n          }\n            self.mak.play_audio();\n        }\n      });\n\n      self.controls.finishedbutton.on('click', function() {\n        self.controls.container.modal('hide');\n        self.mak.controls.audioplayer[0].currentTime = 0;\n      });\n\n      self.controls.hiddenplayer[0].ontimeupdate = function() {\n        if (self.controls.hiddenplayer[0].currentTime >= self.currentAudioEnd) {\n          self.controls.hiddenplayer[0].pause();\n        }\n      };\n\n    },\n\n   // spliton: new RegExp('([,.!?:;\" ])', 'g'),\n      spliton: new RegExp(/([!\"# $%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~])/, 'g'),\n\n    gotComparison: function(comparison, typed) {\n     if(!comparison){return;}\n      var self = this;\n      var thisClass;\n      var wordsmatched=0;\n      $(\".mod_readaloud_modal_target_word\").removeClass(\"mod_readaloud_modal_target_word_correct mod_readaloud_modal_target_word_incorrect\");\n\n      comparison.forEach(function(word, idx) {\n\n        if( word.matched) {\n            thisClass = \"mod_readaloud_modal_target_word_correct\" ;\n            wordsmatched++;\n        }else{\n            thisClass = \"mod_readaloud_modal_target_word_incorrect\";\n        }\n        $(\".mod_readaloud_modal_target_word[data-index='\" + idx + \"']\").addClass(thisClass);\n        if(comparison.length == wordsmatched){\n            setTimeout(function(){self.controls.skipbutton.trigger('click');},600);\n        }\n      });\n\n    },\n    getComparison: function(cmid, passage, transcript,passagephonetic, callback) {\n      var self = this;\n\n      ajax.call([{\n        methodname: 'mod_readaloud_compare_passage_to_transcript',\n        args: {\n          cmid: cmid,\n          passage: passage,\n          transcript: transcript,\n          passagephonetic: passagephonetic,\n          language: self.language\n        },\n        done: function(ajaxresult) {\n          var payloadobject = JSON.parse(ajaxresult);\n          if (payloadobject) {\n            callback(payloadobject);\n          } else {\n            callback(false);\n          }\n        },\n        fail: function(err) {\n          log.debug(err);\n        }\n      }]);\n\n    },\n\n      mobile_user: function() {\n\n          if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n              return true;\n          } else {\n              return false;\n          }\n      },\n\n      chrome_user: function(){\n          if(/Chrome/i.test(navigator.userAgent)) {\n              return true;\n          }else{\n              return false;\n          }\n      }\n  };\n});"],"names":["define","$","log","ajax","def","cloudpoodll","ttrecorder","debug","activated","currentSentence","currentPhonetic","language","currentAudioStart","currentAudioStop","oldBreak","newBreak","mak","controls","results","phonetics","cmid","ttr","init","props","self","this","modelaudiokaraoke","region","stt_guided","shadow","opts","callback","message","type","shadowplaycheckbox","is","playbutton","trigger","playselfbutton","hide","hiddenplayer","pause","usebrowserrec","show","getComparison","capturedspeech","comparison","gotComparison","clone","prepare_controls","register_events","register_mak","activate","deactivate","audioplayer","playing","container","landrcontainer","hiddenselfplayer","skipbutton","finishedbutton","audiourl","fetch_audio_url","attr","on_reach_audio_break","sentence","oldbreak","newbreak","breaks","trim","audiotime","currentAudioEnd","currentPrompt","duration","length","wordnumber","startpos","endpos","slice","join","breaknumber","isfinalbreak","pause_audio","modal","html","split","map","e","i","on","paused","currentTime","play","audio","dataURI","isChecked","get_audio_time","set_audio_time","play_audio","ontimeupdate","spliton","RegExp","typed","thisClass","wordsmatched","removeClass","forEach","word","idx","matched","addClass","setTimeout","passage","transcript","passagephonetic","call","methodname","args","done","ajaxresult","payloadobject","JSON","parse","fail","err","mobile_user","test","navigator","userAgent","chrome_user"],"mappings":"AAAAA,uCAAO,CAAC,SAAU,WAAY,YAAa,4BAA6B,kCAAmC,6BACvG,SAASC,EAAGC,IAAKC,KAAMC,IAAKC,YAAaC,mBAG3CJ,IAAIK,MAAM,6CAEH,CAELC,WAAW,EACXC,gBAAiB,GACjBC,gBAAiB,GACjBC,SAAU,QACVC,kBAAmB,EACnBC,iBAAkB,EAClBC,SAAU,GACVC,SAAU,GACVC,IAAK,KACLC,SAAU,GACVC,QAAS,GACTC,UAAW,GACXC,KAAM,EACNC,IAAK,GAELC,KAAM,SAASC,WAETC,KAAOC,KACXD,KAAKJ,KAAOG,MAAMH,KAClBI,KAAKR,IAAMO,MAAMG,kBACjBF,KAAKb,SAAWY,MAAMZ,SACtBa,KAAKG,OAASJ,MAAMI,OACpBH,KAAKL,UAAYI,MAAMJ,UACvBK,KAAKI,WAAaL,MAAMK,WACxBJ,KAAKK,QAAS,EACdL,KAAKH,IAAI,OA4CLS,KAAO,CACXA,SAAgB,wBAChBA,KAAKF,WAAaJ,KAAKI,WACvBE,KAAKC,SA5CY,SAASC,gBACdA,QAAQC,UACT,mBACCT,KAAKP,SAASiB,mBAAmBC,GAAG,aACtCX,KAAKK,QAAS,EACd3B,IAAIK,MAAM,kBACViB,KAAKP,SAASmB,WAAWC,QAAQ,WAEjCnC,IAAIK,MAAM,mBACViB,KAAKK,QAAO,GAGdL,KAAKP,SAASqB,eAAeC,iBAI1B,oBACqB,IAAhBf,KAAKK,QACPL,KAAKP,SAASuB,aAAa,GAAGC,SAE7BjB,KAAKI,aAAuC,IAAzBJ,KAAKH,IAAIqB,gBAC7BlB,KAAKP,SAASqB,eAAeK,iBAI9B,SAEDnB,KAAKoB,cACDpB,KAAKJ,KACLI,KAAKf,gBACLuB,QAAQa,eACRrB,KAAKd,iBACL,SAASoC,YACLtB,KAAKuB,cAAcD,WAAYd,cAYnDF,KAAKD,QAAS,EACdL,KAAKH,IAAMf,WAAW0C,QACtBxB,KAAKH,IAAIC,KAAKQ,MAGdN,KAAKyB,mBACLzB,KAAK0B,kBACL1B,KAAK2B,gBAGPC,SAAU,gBACHlC,QAAU,QACVV,WAAY,GAEnB6C,WAAY,WACN5B,KAAKT,IAAIC,SAASqC,YAAY,GAAGC,cAC9BvC,IAAIC,SAASqC,YAAY,GAAGb,aAE9BjC,WAAY,GAGnByC,iBAAkB,WACLxB,KACNR,SAASuC,UAAYvD,EAAE,IAAMG,IAAIqD,gBAD3BhC,KAENR,SAASuB,aAAevC,EAAE,qCAFpBwB,KAGNR,SAASyC,iBAAmBzD,EAAE,yCAHxBwB,KAINR,SAASmB,WAAanC,EAAE,kCAJlBwB,KAKNR,SAASiB,mBAAqBjC,EAAE,+BAL1BwB,KAMNR,SAAS0C,WAAa1D,EAAE,kCANlBwB,KAONR,SAAS2C,eAAiB3D,EAAE,sCAPtBwB,KAQNR,SAASqB,eAAiBrC,EAAE,sCARtBwB,KASNoC,SATMpC,KASUT,IAAI8C,kBATdrC,KAUNR,SAASuB,aAAauB,KAAK,MAVrBtC,KAUiCoC,WAI9CV,aAAc,eACR3B,KAAOC,KAEXD,KAAKR,IAAIgD,qBAAuB,SAASC,SAAUC,SAAUC,SAAUC,WAIhE5C,KAAKhB,WAMc,KAApByD,SAASI,WAIb7C,KAAKf,gBAAkBwD,SACvBzC,KAAKV,SAAWoD,SAChB1C,KAAKT,SAAWoD,SAChB3C,KAAKZ,kBAAoBsD,SAASI,UAClC9C,KAAK+C,gBAAkBJ,SAASG,UAE5B9C,KAAKH,IAAIqB,gBACXlB,KAAKH,IAAImD,cAAchD,KAAKf,iBAG3Be,KAAKZ,oBAAoBY,KAAK+C,kBAE7B/C,KAAK+C,gBAAgB/C,KAAKP,SAASuB,aAAa,GAAGiC,UAGlDjD,KAAKL,UAAUuD,OAAOP,SAASQ,WAAW,EAAE,KACvCC,SAAWV,SAASS,WACrBC,SAAS,IAAGA,SAAS,OACpBC,OAASV,SAASQ,WAOtBnD,KAAKd,gBAAkBc,KAAKL,UAAU2D,MAAMF,SAASC,QAAQE,KAAK,UAElEvD,KAAKd,gBAAmB,GAIF,GAAxBwD,SAASc,aAAgC,GAAZb,WAI3BD,SAASc,aAAeZ,OAAOA,OAAOM,OAAS,GAAGM,aACpDxD,KAAKP,SAAS2C,eAAejB,OAC7BnB,KAAKP,SAAS0C,WAAWpB,OACzBf,KAAKV,SAASmE,cAAa,IAE3BzD,KAAKP,SAAS2C,eAAerB,OAC7Bf,KAAKP,SAAS0C,WAAWhB,QAE3BnB,KAAKR,IAAIkE,cACT1D,KAAKP,SAASuC,UAAU2B,MAAM,QAC9BlF,EAAE,sCAAsCmF,KAAKnB,SAASoB,MAAM,KAAKC,KAAI,SAASC,EAAGC,SACxE,4DAA8DA,EAAI,KAAOD,EAAI,iBAQ5FrC,gBAAiB,eAEX1B,KAAOC,KAEXD,KAAKP,SAASmB,WAAWqD,GAAG,SAAS,SAASF,GACvC/D,KAAKP,SAASuB,aAAa,GAAGkD,QAGjClE,KAAKP,SAASuB,aAAa,GAAGmD,YAAcnE,KAAKZ,kBACjDY,KAAKP,SAASuB,aAAa,GAAGoD,QAH9BpE,KAAKP,SAASuB,aAAa,GAAGC,WAOlCjB,KAAKP,SAASqB,eAAemD,GAAG,SAAQ,SAASF,GAC1C/D,KAAKP,SAASyC,iBAAiB,GAAGgC,QAGrClE,KAAKP,SAASyC,iBAAiBK,KAAK,MAAOvC,KAAKH,IAAIwE,MAAMC,SAC1DtE,KAAKP,SAASyC,iBAAiB,GAAGkC,QAHlCpE,KAAKP,SAASyC,iBAAiB,GAAGjB,WAOtCjB,KAAKP,SAASiB,mBAAmBuD,GAAG,UAAU,SAASF,OACjDQ,UAAY9F,EAAEwB,MAAMU,GAAG,YAC3BX,KAAKH,IAAIQ,OAAOkE,aAGlBvE,KAAKP,SAAS0C,WAAW8B,GAAG,SAAS,SAASF,GAC5C/D,KAAKP,SAASuC,UAAU2B,MAAM,QAG9B3D,KAAKP,SAASqB,eAAeC,OAI1Bf,KAAKV,SAASmE,aACfzD,KAAKR,IAAIC,SAASqC,YAAY,GAAGqC,YAAc,GAE3CnE,KAAKP,SAASuB,aAAa,GAAGe,SAChC/B,KAAKP,SAASuB,aAAa,GAAGC,QAEhCjB,KAAKP,SAASuB,aAAa,GAAGmD,YAAcnE,KAAKZ,kBAGjDV,IAAIK,MAAM,iBAAkBiB,KAAKR,IAAIgF,kBACrC9F,IAAIK,MAAM,yBAA0BiB,KAAK+C,iBACtC/C,KAAKR,IAAIgF,iBAAmBxE,KAAK+C,gBAAgB,IAClD/C,KAAKR,IAAIiF,eAAezE,KAAK+C,gBAAgB,IAE7C/C,KAAKR,IAAIkF,iBAIf1E,KAAKP,SAAS2C,eAAe6B,GAAG,SAAS,WACvCjE,KAAKP,SAASuC,UAAU2B,MAAM,QAC9B3D,KAAKR,IAAIC,SAASqC,YAAY,GAAGqC,YAAc,KAGjDnE,KAAKP,SAASuB,aAAa,GAAG2D,aAAe,WACvC3E,KAAKP,SAASuB,aAAa,GAAGmD,aAAenE,KAAK+C,iBACpD/C,KAAKP,SAASuB,aAAa,GAAGC,UAOlC2D,QAAS,IAAIC,OAAO,6CAA8C,KAEpEtD,cAAe,SAASD,WAAYwD,UAC/BxD,gBAECyD,UADA/E,KAAOC,KAEP+E,aAAa,EACjBvG,EAAE,oCAAoCwG,YAAY,qFAElD3D,WAAW4D,SAAQ,SAASC,KAAMC,KAE5BD,KAAKE,SACLN,UAAY,0CACZC,gBAEAD,UAAY,4CAEhBtG,EAAE,gDAAkD2G,IAAM,MAAME,SAASP,WACtEzD,WAAW4B,QAAU8B,cACpBO,YAAW,WAAWvF,KAAKP,SAAS0C,WAAWtB,QAAQ,WAAW,UAK1EO,cAAe,SAASxB,KAAM4F,QAASC,WAAWC,gBAAiBnF,UAGjE5B,KAAKgH,KAAK,CAAC,CACTC,WAAY,8CACZC,KAAM,CACJjG,KAAMA,KACN4F,QAASA,QACTC,WAAYA,WACZC,gBAAiBA,gBACjBvG,SATOc,KASQd,UAEjB2G,KAAM,SAASC,gBACTC,cAAgBC,KAAKC,MAAMH,YAE7BxF,SADEyF,gBAGO,IAGbG,KAAM,SAASC,KACb1H,IAAIK,MAAMqH,UAMdC,YAAa,mBAEL,iEAAiEC,KAAKC,UAAUC,YAOxFC,YAAa,mBACN,UAAUH,KAAKC,UAAUC"}