{"version":3,"file":"speechcards.min.js","sources":["../src/speechcards.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/cloudpoodllloader',\n    'mod_minilesson/ttrecorder',\n    'mod_minilesson/animatecss',\n], function($,  log, Ajax, def, polly, cloudpoodll, ttrecorder, anim) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the quiz stage\n   */\n\n  log.debug('MiniLesson Speechcards: initialising');\n\n  return {\n\n\n\n      //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n      },\n\n    init: function(index, itemdata, quizhelper) {\n\n      this.init_app(index, itemdata, quizhelper);\n    },\n\n    init_app: function(index, itemdata, quizhelper) {\n\n      console.log(itemdata);\n\n      var app = {\n        passmark: 90,\n        pointer: 1,\n        jsondata: null,\n        props: null,\n        dryRun: false,\n        language: 'en-US',\n        terms: [],\n        phonetics: [],\n        displayterms: [],\n        results: [],\n        controls: {},\n        ttrec: null, //a handle on the tt recorder\n\n        init: function() {\n\n          //init terms\n          for (var i = 0; i < itemdata.sentences.length; i++) {\n            app.terms[i] = itemdata.sentences[i].sentence;\n            app.phonetics[i] = itemdata.sentences[i].phonetic;\n            app.displayterms[i] = itemdata.sentences[i].prompt;\n          }\n          app.language = itemdata.language;\n\n         //anim\n          var animopts = {};\n          animopts.useanimatecss=quizhelper.useanimatecss;\n          anim.init(animopts);\n\n          this.init_controls();\n          this.initComponents();\n          this.register_events();\n        },\n\n        init_controls: function() {\n          app.controls = {};\n          app.controls.star_rating = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_star_rating\");\n          app.controls.next_button = $(\"#\" + itemdata.uniqueid + \"_container .minilesson-speechcards_nextbutton\");\n          app.controls.slider = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_speechcards_target_phrase\");\n        },\n        next_question: function() {\n          var stepdata = {};\n          stepdata.index = index;\n          stepdata.hasgrade = true;\n          stepdata.totalitems = app.terms.length;\n          stepdata.correctitems = app.results.filter(function(e){return e.points>0;}).length;\n          stepdata.grade = Math.round((stepdata.correctitems/stepdata.totalitems)*100);\n          quizhelper.do_next(stepdata);\n        },\n        register_events: function() {\n\n          $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n            app.next_question();\n          });\n\n          app.controls.next_button.click(function() {\n            //user has given up ,update word as failed\n            app.check(false);\n\n            //transition if required\n            if (app.is_end()) {\n              setTimeout(function() {\n                app.do_end();\n              }, 200);\n            } else {\n              setTimeout(function() {\n                app.do_next();\n              }, 200);\n            }\n\n          });\n        },\n\n        initComponents: function() {\n\n              var theCallback = function(message) {\n\n                switch (message.type) {\n                  case 'recording':\n\n                    break;\n\n                  case 'speech':\n                    log.debug(\"speech at speechcards\");\n                    var speechtext = message.capturedspeech;\n                    var spoken_clean  = quizhelper.cleanText(speechtext);\n                    var correct_clean = quizhelper.cleanText(app.terms[app.pointer - 1]);\n                    var correctphonetic = app.phonetics[app.pointer - 1];\n        log.debug('speechtext:',speechtext);\n        log.debug('spoken:',spoken_clean);\n        log.debug('correct:',correct_clean);\n                    //Similarity check by character matching\n                    var similarity_js = quizhelper.similarity(spoken_clean, correct_clean);\n                    log.debug('JS similarity: ' + spoken_clean + ':' + correct_clean + ':' + similarity_js);\n\n                    //Similarity check by direct-match/acceptable-mistranscription\n                    if (similarity_js >= app.passmark ||\n                      app.wordsDoMatch(spoken_clean, correct_clean)) {\n                      log.debug('local match:' + ':' + spoken_clean + ':' + correct_clean);\n                      app.showStarRating(100);\n                      app.flagCorrectAndTransition();\n                      return;\n                    }\n\n                    //Similarity check by phonetics(ajax)\n                    quizhelper.checkByPhonetic(correct_clean, spoken_clean, correctphonetic, app.language).then(function(similarity_php) {\n                      if (similarity_php === false) {\n                        return $.Deferred().reject();\n                      } else {\n                        log.debug('PHP similarity: ' + spoken_clean + ':' + correct_clean + ':' + similarity_php);\n\n                        if (similarity_php >= app.passmark) {\n                            app.showStarRating(similarity_php);\n                            app.flagCorrectAndTransition();\n                        }else{\n                            //show the greater of the ratings\n                            app.showStarRating(Math.max(similarity_js,similarity_php));\n                        }\n                      } //end of if check_by_phonetic result\n                    }); //end of check by phonetic\n\n                } //end of switch message type\n              };\n\n\n\n             if(quizhelper.use_ttrecorder()) {\n                 //init tt recorder\n                 var opts = {};\n                 opts.uniqueid = itemdata.uniqueid;\n                 opts.callback = theCallback;\n                 opts.stt_guided=quizhelper.is_stt_guided();\n                 app.ttrec = ttrecorder.clone();\n                 app.ttrec.init(opts);\n                 //init prompt for first card\n                 //in some cases ttrecorder wants to know the target\n                 app.ttrec.currentPrompt=app.displayterms[app.pointer - 1];\n\n             }else{\n                 //init cloudpoodll push recorder\n                 cloudpoodll.init('minilesson-recorder-speechcards-' + itemdata.id, theCallback);\n             }\n\n\n              //init progress dots\n              app.progress_dots(app.results, app.terms);\n\n              app.initSlider();\n\n\n        },\n\n        initSlider: function() {\n          app.controls.slider.text(app.displayterms[app.pointer - 1]);\n          app.controls.slider.show();\n        },\n\n        writeCurrentTerm: function() {\n            /*\n            app.controls.slider.toggle(\"slide\",{direction:\"left\"});\n            app.controls.slider.text(app.displayterms[app.pointer - 1]);\n            app.controls.slider.toggle(\"slide\",{direction:\"right\"})\n             */\n            anim.do_animate(app.controls.slider,'zoomOut animate__faster','out').then(\n                function(){\n                    app.controls.slider.text(app.displayterms[app.pointer - 1]);\n                    anim.do_animate(app.controls.slider,'zoomIn animate__faster','in');\n                }\n            );\n        },\n\n        flagCorrectAndTransition: function() {\n\n          //update students word log if matched\n          app.check(true);\n\n          //transition if required\n          if (app.is_end()) {\n            setTimeout(function() {\n              app.do_end();\n            }, 700);\n          } else {\n            setTimeout(function() {\n              app.do_next();\n            }, 700);\n          }\n\n        },\n\n        wordsDoMatch: function(phraseheard, currentphrase) {\n          //lets lower case everything\n          phraseheard = quizhelper.cleanText(phraseheard);\n          currentphrase = quizhelper.cleanText(currentphrase);\n          if (phraseheard == currentphrase) {\n            return true;\n          }\n          return false;\n        },\n\n\n        showStarRating: function(similarity) {\n          //how many stars code\n          var stars = [true, true, true];\n          if (similarity < app.passmark) {\n            stars = [true, true, false];\n          }\n          if (similarity < .75) {\n            stars = [true, false, false];\n          }\n          if (similarity < 0.5) {\n            stars = [false, false, false];\n          }\n\n          //prepare stars html\n          var code = \"\";\n          stars.forEach(function(star) {\n            if (star === true) {\n              code += '<i class=\"fa fa-star\"></i>';\n            } else {\n              code += '<i class=\"fa fa-star-o\"></i>';\n            }\n          });\n\n          app.controls.star_rating.html(code);\n        },\n\n        check: function(correct) {\n          var points = 1;\n          if (correct == true) {\n            points = 1;\n          } else {\n            points = 0;\n          }\n          var result = {\n            points: points\n          };\n          app.results.push(result);\n        },\n\n        do_next: function() {\n          app.pointer++;\n          app.progress_dots(app.results, app.terms);\n          app.clearStarRating();\n          if (!app.is_end()) {\n            app.writeCurrentTerm();\n            //in some cases ttrecorder wants to know the target\n            if(quizhelper.use_ttrecorder()) {\n                app.ttrec.currentPrompt=app.displayterms[app.pointer - 1];\n            }\n\n          } else {\n            app.do_end();\n          }\n        },\n\n        clearStarRating: function() {\n          app.controls.star_rating.html('· · ·');\n        },\n\n        do_end: function() {\n          app.next_question();\n        },\n\n        is_end: function() {\n          //pointer is 1 based but array is, of course, 0 based\n          if (app.pointer <= app.terms.length) {\n            return false;\n          } else {\n            return true;\n          }\n        },\n\n        progress_dots: function(results, terms) {\n\n          var code = \"\";\n          var color = \"\";\n          terms.forEach(function(o, i) {\n            color = \"darkgray\";\n            if (results[i] !== undefined) {\n              if (results[i].points) {\n                color = \"green\";\n              } else {\n                color = \"red\";\n              }\n            }\n            code += '<i style=\"color:' + color + ';\" class=\"fa fa-circle\"></i>';\n          });\n\n          $(\"#\" + itemdata.uniqueid + \"_container .minilesson_progress_dots\").html(code);\n\n        },\n      }; //end of app definition\n      app.init();\n\n    } //end of init_App\n\n\n  }; //end of return value\n});"],"names":["define","$","log","Ajax","def","polly","cloudpoodll","ttrecorder","anim","debug","clone","extend","this","init","index","itemdata","quizhelper","init_app","console","app","passmark","pointer","jsondata","props","dryRun","language","terms","phonetics","displayterms","results","controls","ttrec","i","sentences","length","sentence","phonetic","prompt","animopts","useanimatecss","init_controls","initComponents","register_events","star_rating","uniqueid","next_button","slider","next_question","stepdata","hasgrade","totalitems","correctitems","filter","e","points","grade","Math","round","do_next","on","click","check","is_end","setTimeout","do_end","theCallback","message","type","speechtext","capturedspeech","spoken_clean","cleanText","correct_clean","correctphonetic","similarity_js","similarity","wordsDoMatch","showStarRating","flagCorrectAndTransition","checkByPhonetic","then","similarity_php","Deferred","reject","max","use_ttrecorder","opts","callback","stt_guided","is_stt_guided","currentPrompt","id","progress_dots","initSlider","text","show","writeCurrentTerm","do_animate","phraseheard","currentphrase","stars","code","forEach","star","html","correct","result","push","clearStarRating","color","o","undefined"],"mappings":"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"}