{"version":3,"file":"cloudpoodllhelper.min.js","sources":["../src/cloudpoodllhelper.js"],"sourcesContent":["define([\"jquery\", \"core/log\", \"qtype_cloudpoodll/cloudpoodllloader\", \"core/templates\"], function ($, log, cloudpoodll, templates) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug(\"cloudpoodll helper: initialising\");\n\n    return {\n\n        configs: {},\n\n        init: function (opts) {\n            var config ={};\n            config.component = opts[\"component\"];\n            config.data_id = opts[\"data_id\"];\n            config.inputname = opts[\"inputname\"];\n            config.transcriber = opts[\"transcriber\"];\n            config.uploadstate= false;\n            config.safesave = opts[\"safesave\"];\n\n            //register controls\n            var name = CSS.escape(config.inputname);\n            config.controls = {\n                nextpagebtn: $(\".submitbtns .mod_quiz-next-nav\"),\n                mediaurl: $(\"input[name=\" + name + \"mediaurl]\"),\n                transcript: $(\"input[name=\" + name + \"transcript]\"),\n                details: $(\"input[name=\" + name + \"details]\"),\n                answer: $(\"input[name=\" + name + \"]\"),\n                answerstatus: $(\"div#\" + name + \"_asc\"),\n            };\n            this.configs[config.data_id] = config;\n            var that=this;\n\n            //setup recorder\n            var gspeech = \"\";\n\n            cloudpoodll.init(config.data_id, function (evt) {\n                var theconfig=that.configs[evt.id];\n                //we need to only do our event (not another recorder on this page)\n                if (!theconfig){return;}\n                //log the details on this event\n                that.logDetails(theconfig.controls.details,\n                    theconfig.controls.answerstatus,\n                    evt);\n\n                switch (evt.type) {\n                    case \"recording\":\n                        if (evt.action === \"started\") {\n                            gspeech = \"\";\n                            // post a custom event that a filter template might be interested in\n                            var cpquestionStarted = new CustomEvent(\"cpquestionStarted\", {details: evt});\n                            document.dispatchEvent(cpquestionStarted);\n\n                            //if opts safe save\n                            if(theconfig.safesave==1) {\n                                theconfig.controls.nextpagebtn.attr('disabled', 'disabled');\n                                //Add a page unload check ..\n                                $(window).on('beforeunload', that.preventPrematureLeaving);\n                            }\n                        }\n                        break;\n                    case \"speech\":\n                        gspeech += \"  \" + evt.capturedspeech;\n                        theconfig.controls.transcript.val(gspeech);\n                        theconfig.controls.answer.val(gspeech);\n                        break;\n                    case \"awaitingprocessing\":\n                        if (theconfig.uploadstate != \"posted\") {\n                            theconfig.controls.mediaurl.val(evt.mediaurl);\n                            theconfig.controls.answer.val(evt.mediaurl);\n\n                            // post a custom event that a filter template might be interested in\n                            var cpquestionUploaded = new CustomEvent(\"cpquestionUploaded\", {details: evt});\n                            document.dispatchEvent(cpquestionUploaded);\n\n                            //if opts safe save\n                            if(theconfig.safesave==1) {\n                                theconfig.controls.nextpagebtn.removeAttr('disabled', 'disabled');\n                                //deactivate premature leaving\n                                $(window).off('beforeunload', that.preventPrematureLeaving);\n                            }\n                        }\n                        theconfig.uploadstate = \"posted\";\n                        break;\n                    case \"error\":\n                        alert(\"PROBLEM: \" + evt.message);\n                        break;\n                }\n            }//end of callback function\n\n            );//end of cp init\n\n        },\n        preventPrematureLeaving: function(e){\n            log.debug('preventPrematureLeaving has been called');\n            e.preventDefault();\n            return e.returnValue = \"Your recording has not been uploaded. Cancel to stay on this page.\";\n        },\n\n        register_events: function (config) {\n            //nothing here\n        },\n\n        logDetails: function(details,answerstatus,theevent){\n          //make sure we have a details control to work with\n          if(details.length>0){\n              //get new, or existing details\n              var detailsobj={recevents: []};\n              var json_string=details.val();\n              if(json_string!==null && json_string!==''){\n                  try {\n                      detailsobj = JSON.parse(json_string);\n                  } catch (error) {\n                      log.debug('not valid details string')\n                  }\n              }\n              //we don't want to log everything, so just do the main data\n              var logdata={}\n              logdata.type=theevent.type;\n              logdata.time = new Date().toLocaleString('en-us') ;\n              switch(theevent.type){\n                  case \"recording\":\n                      logdata.action=theevent.action;\n                      break;\n\n                  case \"awaitingprocessing\":\n                      logdata.targetfile = theevent.mediaurl;\n                      break;\n\n                  case \"error\":\n                      logdata.code=theevent.code;\n                      logdata.message=theevent.message;\n                      break;\n\n                  case \"filesubmitted\":\n                      logdata.finalfile = theevent.mediaurl;\n                      break;\n\n                  case \"uploadcommenced\":\n                      logdata.srcfile = theevent.sourcefilename;\n                      logdata.mimetype = theevent.sourcemimetype;\n                      break;\n\n                  default:\n                      //just the type I guess\n\n              }\n              //add the new event details\n              detailsobj.recevents.push(logdata)\n              details.val(JSON.stringify(detailsobj));\n\n              //update our question display so its clear what happened\n              logdata.insession=true;\n              logdata[logdata.type]=true;\n              templates.render('qtype_cloudpoodll/answerstatus',logdata).then(\n                  function(html,js){\n                      answerstatus.html(html);\n                  }\n              );\n\n          }\n        },\n    };//end of return object\n});"],"names":["define","$","log","cloudpoodll","templates","debug","configs","init","opts","config","component","data_id","inputname","transcriber","uploadstate","safesave","name","CSS","escape","controls","nextpagebtn","mediaurl","transcript","details","answer","answerstatus","that","this","gspeech","evt","theconfig","id","logDetails","type","action","cpquestionStarted","CustomEvent","document","dispatchEvent","attr","window","on","preventPrematureLeaving","capturedspeech","val","cpquestionUploaded","removeAttr","off","alert","message","e","preventDefault","returnValue","register_events","theevent","length","detailsobj","recevents","json_string","JSON","parse","error","logdata","time","Date","toLocaleString","targetfile","code","finalfile","srcfile","sourcefilename","mimetype","sourcemimetype","push","stringify","insession","render","then","html","js"],"mappings":"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"}